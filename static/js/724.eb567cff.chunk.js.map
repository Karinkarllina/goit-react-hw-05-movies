{"version":3,"file":"static/js/724.eb567cff.chunk.js","mappings":"8PAEMA,EAAW,gCACXC,EAAU,mCAGhB,aAAe,OAAf,oBAAe,WAA+BC,GAA/B,gGAEqBC,EAAAA,EAAAA,IAAA,UAAaH,EAAb,iBAA8BE,EAA9B,oBAAiDD,EAAjD,oBAFrB,cAELG,EAFK,yBAMJA,GANI,sCAUL,IAAIC,MAAM,KAAMC,SAVX,wFCLf,MAAgC,oCAAhC,EAAgF,gCAAhF,EAA6H,iCAA7H,EAA8K,oCAA9K,EAAgO,kCAAhO,EAAwR,0CAAxR,EAA4V,8CAA5V,EAAoa,8CAApa,EAA4e,8CAA5e,EAAuiB,iCAAviB,EAAmlB,+BAAnlB,EAA4oB,8C,SCqE5oB,EAjEqB,WAAO,IAAD,IAExB,GAAkCC,EAAAA,EAAAA,UAAS,CAAC,GAA5C,eAAOC,EAAP,KAAkBC,EAAlB,KAGQP,GAAYQ,EAAAA,EAAAA,MAAZR,QAEHS,GAAWC,EAAAA,EAAAA,MACXC,GAAkBC,EAAAA,EAAAA,QAAM,oBAACH,EAASI,aAAV,aAAC,EAAgBC,YAAjB,QAAyB,KAUzD,IARGC,EAAAA,EAAAA,YAAU,YFTE,SAAf,mCEWMC,CAAgBhB,GAASiB,MAAK,SAAAC,GAC3BX,EAAaW,EAAMC,KAErB,GACL,GAAE,CAACnB,IAEFM,EAAUc,GACV,OACG,iCACG,SAAC,KAAD,CAAMC,GAAIV,EAAgBW,QAA1B,UACY,mBAAQC,KAAK,SAASC,UAAWC,EAAjC,wBAGf,yBACM,gBAAID,UAAWC,EAAf,WACG,gBAAKC,IAAG,yCAAoCpB,EAAUqB,aAAeC,IAAG,UAAKtB,EAAUuB,OAASL,UAAWC,EAAcK,MAAM,SAC/H,iBAAKN,UAAWC,EAAhB,WACA,0BAAKnB,EAAUuB,MAAf,KAAsB,gCAAQvB,EAAUyB,aAAaC,MAAM,EAAG,GAAxC,WACnB,eAAGR,UAAWC,EAAd,oCAA+CQ,KAAKC,MAA+B,GAAzB5B,EAAU6B,cAApE,SACH,sCACA,cAAGX,UAAWC,EAAd,SAAkCnB,EAAU8B,YAC5C,oCACA,cAAGZ,UAAWC,EAAd,SAAgCnB,EAAU+B,OAAOC,KAAI,SAAAC,GAAK,OAAK,gCAAuBA,EAAMC,KAA7B,MAAWD,EAAMnB,GAAtB,eAIhE,0BACG,UAAC,EAAAqB,SAAD,CAAUC,UAAU,yCAApB,WACG,iBAAKlB,UAAWC,EAAhB,WACG,cAAGD,UAAWC,EAAd,qCACA,0BACG,gBAAID,UAAWC,EAAf,WACG,eAAID,UAAWC,EAAf,UACG,SAAC,KAAD,CAAMJ,GAAG,OAAOG,UAAWC,EAA3B,qBAIH,eAAID,UAAWC,EAAf,UACG,SAAC,KAAD,CAAMJ,GAAG,UAAUG,UAAWC,EAA9B,gCAOZ,SAAC,KAAD,WAMd,C","sources":["servises/getMovieInfo.jsx","webpack://react-homework-template/./src/pages/MovieDetails/MovieDetails.module.css?0c24","pages/MovieDetails/MovieDetails.jsx"],"sourcesContent":["import axios from 'axios';\n\nconst BASE_URL = 'https://api.themoviedb.org/3/';\nconst API_KEY = '8577973ead545c312dfdf14be58760b9';\n\n\nexport default async function getMovieDetails(movieId) { \n    try {\n    const resultApiFilmInfo = await axios.get(`${BASE_URL}movie/${movieId}?api_key=${API_KEY}&language=en-US`)\n    \n      // console.log(resultApiFilmInfo);\n\n    return resultApiFilmInfo;\n  \n  }\n  catch (error) {\n    throw new Error(error.message);\n  };\n}","// extracted by mini-css-extract-plugin\nexport default {\"movieFlexWrap\":\"MovieDetails_movieFlexWrap__Lke73\",\"movieInfo\":\"MovieDetails_movieInfo__4EKMk\",\"movieScore\":\"MovieDetails_movieScore__UQXpa\",\"movieOverview\":\"MovieDetails_movieOverview__acHno\",\"movieGenres\":\"MovieDetails_movieGenres__frmdo\",\"movieAdditionalInfo\":\"MovieDetails_movieAdditionalInfo__RhRTi\",\"movieAdditionalInfoItem\":\"MovieDetails_movieAdditionalInfoItem__ewcp7\",\"movieAdditionalInfoList\":\"MovieDetails_movieAdditionalInfoList__CNtTz\",\"movieAdditionalInfoLink\":\"MovieDetails_movieAdditionalInfoLink__JhlFG\",\"buttonBack\":\"MovieDetails_buttonBack__sNwb2\",\"movieimg\":\"MovieDetails_movieimg__QijGq\",\"movieAdditionalInfoWrap\":\"MovieDetails_movieAdditionalInfoWrap__dnSTa\"};","import { useParams, Link, useLocation, Outlet } from 'react-router-dom';\nimport { useState, useEffect, useRef, Suspense } from 'react';\nimport getMovieDetails from 'servises/getMovieInfo';\nimport css from './MovieDetails.module.css'\n\nconst MovieDetails = () => {\n\n   const [movieInfo, setmovieInfo] = useState({});\n\n\n   const { movieId } = useParams();\n\n  const location = useLocation();\n  const backLocationRef = useRef(location.state?.from ?? '/') ;\n\n   useEffect(() => { \n\n      getMovieDetails(movieId).then(movie => {\n         setmovieInfo(movie.data);  \n         // console.log(movie.data)\n      })\n }, [movieId]);\n\nif(movieInfo.id)\n   return (\n      <>\n         <Link to={backLocationRef.current}>\n                     <button type='button' className={css.buttonBack} >Go Back</button>\n         </Link>\n         \n      <ul>\n            <li className={css.movieFlexWrap}>\n               <img src={`https://image.tmdb.org/t/p/w500${movieInfo.poster_path}`} alt={`${movieInfo.title}`} className={css.movieimg} width=\"300\"/>\n               <div className={css.movieInfo}>\n               <h2>{movieInfo.title} <span>({movieInfo.release_date.slice(0, 4)})</span></h2>\n                  <p className={css.movieScore}> {`User score: ${Math.round(movieInfo.vote_average * 10)}%`}</p>\n               <h3>Overview</h3>\n               <p className={css.movieOverview}>{movieInfo.overview}</p> \n               <h3>Genres</h3> \n               <p className={css.movieGenres}>{movieInfo.genres.map(genre => (<span key={genre.id}> {genre.name} </span> ))}</p>   \n               </div>\n            </li>\n         </ul>\n         <div>\n            <Suspense fallback={<div> Loading...</div>}>\n               <div className={css.movieAdditionalInfoWrap}>\n                  <p className={css.movieAdditionalInfo}>Additional Information</p>\n                  <div>\n                     <ul className={css.movieAdditionalInfoList}>\n                        <li className={css.movieAdditionalInfoItem}>\n                           <Link to=\"cast\" className={css.movieAdditionalInfoLink} >\n                              Cast\n                           </Link>                     \n                        </li>\n                        <li className={css.movieAdditionalInfoItem}>\n                           <Link to=\"reviews\" className={css.movieAdditionalInfoLink}>\n                              Reviews\n                           </Link>                          \n                        </li>\n                     </ul>\n                  </div>\n               </div>\n               <Outlet />  \n            </Suspense>\n            </div>\n      </>\n   )\n\n}\n\nexport default MovieDetails\n"],"names":["BASE_URL","API_KEY","movieId","axios","resultApiFilmInfo","Error","message","useState","movieInfo","setmovieInfo","useParams","location","useLocation","backLocationRef","useRef","state","from","useEffect","getMovieDetails","then","movie","data","id","to","current","type","className","css","src","poster_path","alt","title","width","release_date","slice","Math","round","vote_average","overview","genres","map","genre","name","Suspense","fallback"],"sourceRoot":""}